{"version":3,"sources":["rpc.js","util.js","App.js","index.js"],"names":["rpcAddr","methods","getAdminToken","method","getAddrs","setAddrs","addAddrs","removeAddrs","rpc","hasOwnProperty","addr","params","target","sources","source","Object","keys","key","undefined","util","defaultParams","rpcCall","a","axios","url","timeout","data","id","jsonrpc","response","error","result","acceptAddrs","adminAddrs","addrsToStr","addrs","join","strToAddrs","str","split","filter","s","length","App","props","state","adminTokenQRCode","handleAcceptAddrsChange","bind","handleAdminAddrsChange","handleSubmit","event","this","setState","value","preventDefault","console","alert","adminToken","QRCode","toDataURL","JSON","stringify","className","Container","src","TextField","multiline","variant","label","onChange","style","width","Button","color","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16d677d2.chunk.js","sourcesContent":["'use strict';\n\nimport axios from 'axios';\n\nimport * as util from './util';\n\nconst rpcAddr = '/rpc/admin';\n\nconst methods = {\n  getAdminToken: { method: 'getAdminToken' },\n  getAddrs: { method: 'getAddrs' },\n  setAddrs: { method: 'setAddrs' },\n  addAddrs: { method: 'addAddrs' },\n  removeAddrs: { method: 'removeAddrs' },\n}\n\nvar rpc = {};\nfor (let method in methods) {\n  if (methods.hasOwnProperty(method)) {\n    rpc[method] = (addr, params) => {\n      params = util.assignDefined({}, methods[method].defaultParams, params)\n      return rpcCall(addr, methods[method].method, params);\n    }\n  }\n}\n\nasync function rpcCall(addr, method, params = {}) {\n  let response = await axios({\n    url: addr,\n    method: 'POST',\n    timeout: 10000,\n    data: {\n      id: 'nkn-socks-web',\n      jsonrpc: '2.0',\n      method: method,\n      params: params,\n    },\n  });\n\n  let data = response.data;\n\n  if (data.error) {\n    throw data.error;\n  }\n\n  if (data.result !== undefined) {\n    return data.result;\n  }\n\n  throw 'rpc response contains no result or error field';\n}\n\nexport async function getAdminToken() {\n  return rpc.getAdminToken(rpcAddr);\n}\n\nexport async function getAddrs() {\n  return rpc.getAddrs(rpcAddr);\n}\n\nexport async function setAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.setAddrs(rpcAddr, params);\n}\n\nexport async function addAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.addAddrs(rpcAddr, params);\n}\n\nexport async function removeAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.removeAddrs(rpcAddr, params);\n}\n","'use strict';\n\nexport function assignDefined(target, ...sources) {\n  for (let source of sources) {\n    if (source) {\n      for (let key of Object.keys(source)) {\n        if (source[key] !== undefined) {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n  return target;\n}\n","import React from 'react';\nimport QRCode from 'qrcode';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\n\nimport * as rpc from './rpc';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adminTokenQRCode: null,\n      acceptAddrs: '',\n      adminAddrs: '',\n    };\n    this.handleAcceptAddrsChange = this.handleAcceptAddrsChange.bind(this);\n    this.handleAdminAddrsChange = this.handleAdminAddrsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleAcceptAddrsChange(event) {\n    this.setState({ acceptAddrs: event.target.value });\n  }\n\n  handleAdminAddrsChange(event) {\n    this.setState({ adminAddrs: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      let addrs = await rpc.setAddrs(strToAddrs(this.state.acceptAddrs), strToAddrs(this.state.adminAddrs));\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n    } catch (e) {\n      console.error(e);\n      alert(e);\n      return;\n    }\n\n    alert('Save success!');\n  }\n\n  componentDidMount() {\n    (async () => {\n      try {\n        let adminToken = await rpc.getAdminToken();\n        if (adminToken) {\n          let url = await QRCode.toDataURL(JSON.stringify(adminToken));\n          this.setState({\n            adminTokenQRCode: url,\n          });\n        }\n      } catch (e) {\n        console.error(e);\n        alert(e);\n        return;\n      }\n    })();\n\n    (async () => {\n      try {\n        let addrs = await rpc.getAddrs();\n        this.setState({\n          acceptAddrs: addrsToStr(addrs.acceptAddrs),\n          adminAddrs: addrsToStr(addrs.adminAddrs),\n        });\n      } catch (e) {\n        console.error(e);\n        alert(e);\n        return;\n      }\n    })();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <img\n            src={this.state.adminTokenQRCode}\n            />\n          <div>\n            <TextField\n              multiline\n              variant=\"filled\"\n              label=\"Accept addresses\"\n              value={this.state.acceptAddrs}\n              onChange={this.handleAcceptAddrsChange}\n              style={{width: '100%'}}\n              />\n          </div>\n          <div>\n            <TextField\n              multiline\n              variant=\"filled\"\n              label=\"Admin addresses\"\n              value={this.state.adminAddrs}\n              onChange={this.handleAdminAddrsChange}\n              style={{width: '100%'}}\n              />\n          </div>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleSubmit}\n              >\n              Save\n            </Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction addrsToStr(addrs) {\n  if (!addrs) {\n    return '';\n  }\n  return addrs.join('\\n');\n}\n\nfunction strToAddrs(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split('\\n').filter(s => s.length > 0);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}