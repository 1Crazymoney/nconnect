{"version":3,"sources":["i18n.js","rpc.js","util.js","App.js","index.js"],"names":["resources","en","translation","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","rpcAddr","methods","getAdminToken","method","getAddrs","setAddrs","addAddrs","removeAddrs","getLocalIP","getInfo","rpc","hasOwnProperty","addr","params","target","sources","source","Object","keys","key","undefined","util","defaultParams","rpcCall","a","window","rpcHeaders","headers","console","error","axios","url","timeout","data","id","jsonrpc","response","result","Error","acceptAddrs","adminAddrs","App","props","state","activeTab","adminTokenStr","adminTokenQRCode","localIP","language","i","languages","length","handleTabChange","bind","handleAcceptAddrsChange","handleAdminAddrsChange","handleSubmit","updateAdminToken","handleLanguageChange","event","value","this","setState","updateAdvancedInfo","changeLanguage","preventDefault","strToAddrs","addrs","addrsToStr","alert","t","adminToken","JSON","stringify","QRCode","toDataURL","then","catch","e","info","ipv4","setInterval","className","Container","Select","onChange","map","lang","MenuItem","getFixedT","src","alt","TabContext","TabList","centered","Tab","label","TabPanel","List","ListItem","ListItemText","Trans","i18nKey","components","nMobileProLink","rel","href","guideLink","nConnectClientDesktopLink","paymentLink","addrToPubKey","lng","forumLink","emailLink","emailAddress","TextField","disabled","multiline","join","style","width","variant","Button","color","onClick","React","Component","str","split","filter","s","withTranslation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.991050b4.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport translationEN from './translations/en.json';\nimport translationZHCN from './translations/zh-CN.json';\n\nexport const resources = {\n  en: {\n    translation: translationEN\n  },\n  \"zh-CN\": {\n    translation: translationZHCN\n  }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    }\n  });\n\nexport default i18n;\n","import axios from 'axios';\n\nimport * as util from './util';\n\nconst rpcAddr = '/rpc/admin';\n\nconst methods = {\n  getAdminToken: { method: 'getAdminToken' },\n  getAddrs: { method: 'getAddrs' },\n  setAddrs: { method: 'setAddrs' },\n  addAddrs: { method: 'addAddrs' },\n  removeAddrs: { method: 'removeAddrs' },\n  getLocalIP: { method: 'getLocalIP' },\n  getInfo: { method: 'getInfo' },\n}\n\nvar rpc = {};\nfor (let method in methods) {\n  if (methods.hasOwnProperty(method)) {\n    rpc[method] = (addr, params) => {\n      params = util.assignDefined({}, methods[method].defaultParams, params)\n      return rpcCall(addr, methods[method].method, params);\n    }\n  }\n}\n\nasync function rpcCall(addr, method, params = {}) {\n  let headers;\n  try {\n    headers = await window.rpcHeaders;\n  } catch (e) {\n    console.error('Await rpc headers error:', e);\n  }\n\n  let response = await axios({\n    url: addr,\n    method: 'POST',\n    timeout: 10000,\n    headers,\n    data: {\n      id: 'nConnect-web',\n      jsonrpc: '2.0',\n      method: method,\n      params: params,\n    },\n  });\n\n  let data = response.data;\n\n  if (data.error) {\n    throw data.error;\n  }\n\n  if (data.result !== undefined) {\n    return data.result;\n  }\n\n  throw new Error('rpc response contains no result or error field');\n}\n\nexport async function getAdminToken() {\n  return rpc.getAdminToken(rpcAddr);\n}\n\nexport async function getAddrs() {\n  return rpc.getAddrs(rpcAddr);\n}\n\nexport async function setAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.setAddrs(rpcAddr, params);\n}\n\nexport async function addAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.addAddrs(rpcAddr, params);\n}\n\nexport async function removeAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.removeAddrs(rpcAddr, params);\n}\n\nexport async function getLocalIP() {\n  return rpc.getLocalIP(rpcAddr);\n}\n\nexport async function getInfo() {\n  return rpc.getInfo(rpcAddr);\n}\n","export function assignDefined(target, ...sources) {\n  for (let source of sources) {\n    if (source) {\n      for (let key of Object.keys(source)) {\n        if (source[key] !== undefined) {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n  return target;\n}\n","import React from 'react';\nimport QRCode from 'qrcode';\nimport { withTranslation, Trans } from 'react-i18next';\nimport { Button, Container, List, ListItem, ListItemText, Tab, TextField, MenuItem, Select } from '@material-ui/core';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\n\nimport i18n, { resources as languages } from './i18n';\nimport * as rpc from './rpc';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '0',\n      adminTokenStr: '',\n      adminTokenQRCode: '',\n      acceptAddrs: '',\n      adminAddrs: '',\n      addr: '',\n      localIP: [],\n      language: '',\n    };\n    for (let i = 0; i < i18n.languages.length; i++) {\n      if (languages[i18n.languages[i]]) {\n        this.state.language = i18n.languages[i];\n        break;\n      }\n    }\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleAcceptAddrsChange = this.handleAcceptAddrsChange.bind(this);\n    this.handleAdminAddrsChange = this.handleAdminAddrsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateAdminToken = this.updateAdminToken.bind(this);\n    this.handleLanguageChange = this.handleLanguageChange.bind(this);\n  }\n\n  handleTabChange(event, value) {\n    this.setState({ activeTab: value });\n    if (value === '4') {\n      this.updateAdvancedInfo();\n    }\n  }\n\n  handleAcceptAddrsChange(event) {\n    this.setState({ acceptAddrs: event.target.value });\n  }\n\n  handleAdminAddrsChange(event) {\n    this.setState({ adminAddrs: event.target.value });\n  }\n\n  handleLanguageChange(event) {\n    this.setState({ language: event.target.value });\n    i18n.changeLanguage(event.target.value);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      let addrs = await rpc.setAddrs(strToAddrs(this.state.acceptAddrs), strToAddrs(this.state.adminAddrs));\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n      alert(this.props.t('save success'));\n    } catch (e) {\n      console.error(e);\n      alert(e);\n    }\n  }\n\n  async updateAdminToken() {\n    try {\n      let adminToken = await rpc.getAdminToken();\n      if (adminToken) {\n        let adminTokenStr = JSON.stringify(adminToken);\n        let adminTokenQRCode = await QRCode.toDataURL(adminTokenStr);\n        this.setState({\n          adminTokenStr,\n          adminTokenQRCode,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  updateAdvancedInfo() {\n    this.updateAdminToken();\n\n    rpc.getAddrs().then((addrs) => {\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n    }).catch((e) => {\n      console.error(e);\n      alert(e);\n    });\n\n    rpc.getInfo().then((info) => {\n      this.setState({\n        addr: info.addr,\n        localIP: info.localIP.ipv4,\n      });\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  componentDidMount() {\n    this.updateAdvancedInfo();\n    setInterval(this.updateAdminToken, 5 * 60 * 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <div className=\"language-switcher\">\n            <Select\n              value={this.state.language}\n              onChange={this.handleLanguageChange}\n            >\n              {\n                Object.keys(languages).map((lang) => {\n                  return (\n                    <MenuItem key={lang} value={lang}>{i18n.getFixedT(lang)('language')}</MenuItem>\n                  )\n                })\n              }\n            </Select>\n          </div>\n          <div className=\"row\">\n            <img src=\"/static/media/nkn_logo.png\" alt=\"NKN logo\" />\n          </div>\n          <TabContext value={this.state.activeTab}>\n            <TabList centered onChange={this.handleTabChange}>\n              <Tab label={this.props.t('mobile tab')} value=\"0\" />\n              <Tab label={this.props.t('desktop tab')} value=\"1\" />\n              <Tab label={this.props.t('data plan tab')} value=\"2\" />\n              <Tab label={this.props.t('need help tab')} value=\"3\" />\n              <Tab label={this.props.t('advanced tab')} value=\"4\" />\n            </TabList>\n            <TabPanel value=\"0\">\n              <div className=\"row\">\n                <img src={this.state.adminTokenQRCode} alt=\"QR Code\" />\n              </div>\n              <List>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"download nMobile pro\"\n                      components={{\n                        nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('add device from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('connect from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"mobile guide\"\n                      components={{\n                        guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')} />,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n              </List>\n            </TabPanel>\n            <TabPanel value=\"1\">\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add device in mobile first\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add server from desktop\"\n                    components={{\n                      nConnectClientDesktopLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nConnectClientDesktopLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('scan QR code to add server to desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('connect from desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"desktop guide\"\n                    components={{\n                      guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"2\">\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('purchase method')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"purchase from mobile\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"purchase from web\"\n                    components={{\n                      paymentLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('paymentLink', {addr: addrToPubKey(this.state.addr), lng: this.state.language})} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"3\">\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('need help method')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"create forum post\"\n                    components={{\n                      forumLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('forumLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"send email\"\n                    components={{\n                      emailLink: <a href={'mailto:'+this.props.t('emailAddress')} />,\n                      emailAddress: this.props.t('emailAddress'),\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"mobile customer service\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"4\">\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('local IP address')}\n                  value={this.state.localIP.join('\\n')}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('access key')}\n                  value={this.state.adminTokenStr}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('accept addresses')}\n                  value={this.state.acceptAddrs}\n                  onChange={this.handleAcceptAddrsChange}\n                  style={{width: '100%'}}\n                  />\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('admins')}\n                  value={this.state.adminAddrs}\n                  onChange={this.handleAdminAddrsChange}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleSubmit}\n                  style={{width: '100%'}}\n                  >\n                  {this.props.t('save')}\n                </Button>\n              </div>\n            </TabPanel>\n          </TabContext>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction addrsToStr(addrs) {\n  if (!addrs) {\n    return '';\n  }\n  return addrs.join('\\n');\n}\n\nfunction strToAddrs(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split('\\n').filter(s => s.length > 0);\n}\n\nfunction addrToPubKey(addr) {\n  let s = addr.split('.');\n  return s[s.length-1];\n}\n\nexport default withTranslation()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './index.css';\nimport './i18n';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}