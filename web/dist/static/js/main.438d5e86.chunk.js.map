{"version":3,"sources":["i18n.js","rpc.js","util.js","App.js","index.js"],"names":["resources","en","translation","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","rpcAddr","methods","getAdminToken","method","getAddrs","setAddrs","addAddrs","removeAddrs","getLocalIP","getInfo","rpc","hasOwnProperty","addr","params","target","sources","source","Object","keys","key","undefined","util","defaultParams","rpcCall","a","window","rpcHeaders","headers","console","error","axios","url","timeout","data","id","jsonrpc","response","result","Error","acceptAddrs","adminAddrs","HoverQRCode","props","state","qrCode","QRCode","toDataURL","this","rawData","then","setState","catch","Tooltip","title","src","alt","style","height","verticalAlign","React","Component","App","activeTab","adminTokenStr","adminTokenQRCode","localIP","language","i","languages","length","handleTabChange","bind","handleAcceptAddrsChange","handleAdminAddrsChange","handleSubmit","updateAdminToken","handleLanguageChange","event","value","updateAdvancedInfo","changeLanguage","preventDefault","strToAddrs","addrs","addrsToStr","alert","t","adminToken","JSON","stringify","e","info","ipv4","setInterval","className","Container","Select","onChange","map","lang","MenuItem","getFixedT","TabContext","TabList","centered","Tab","label","TabPanel","List","ListItem","ListItemText","Trans","i18nKey","components","nMobileProLink","rel","href","guideLink","nConnectClientDesktopLink","paymentLink","addrToPubKey","lng","forumLink","emailLink","emailAddress","TextField","disabled","multiline","join","width","variant","Button","color","onClick","str","split","filter","s","withTranslation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.438d5e86.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport translationEN from './translations/en.json';\nimport translationZHCN from './translations/zh-CN.json';\n\nexport const resources = {\n  en: {\n    translation: translationEN\n  },\n  \"zh-CN\": {\n    translation: translationZHCN\n  }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    }\n  });\n\nexport default i18n;\n","import axios from 'axios';\n\nimport * as util from './util';\n\nconst rpcAddr = '/rpc/admin';\n\nconst methods = {\n  getAdminToken: { method: 'getAdminToken' },\n  getAddrs: { method: 'getAddrs' },\n  setAddrs: { method: 'setAddrs' },\n  addAddrs: { method: 'addAddrs' },\n  removeAddrs: { method: 'removeAddrs' },\n  getLocalIP: { method: 'getLocalIP' },\n  getInfo: { method: 'getInfo' },\n}\n\nvar rpc = {};\nfor (let method in methods) {\n  if (methods.hasOwnProperty(method)) {\n    rpc[method] = (addr, params) => {\n      params = util.assignDefined({}, methods[method].defaultParams, params)\n      return rpcCall(addr, methods[method].method, params);\n    }\n  }\n}\n\nasync function rpcCall(addr, method, params = {}) {\n  let headers;\n  try {\n    headers = await window.rpcHeaders;\n  } catch (e) {\n    console.error('Await rpc headers error:', e);\n  }\n\n  let response = await axios({\n    url: addr,\n    method: 'POST',\n    timeout: 10000,\n    headers,\n    data: {\n      id: 'nConnect-web',\n      jsonrpc: '2.0',\n      method: method,\n      params: params,\n    },\n  });\n\n  let data = response.data;\n\n  if (data.error) {\n    throw data.error;\n  }\n\n  if (data.result !== undefined) {\n    return data.result;\n  }\n\n  throw new Error('rpc response contains no result or error field');\n}\n\nexport async function getAdminToken() {\n  return rpc.getAdminToken(rpcAddr);\n}\n\nexport async function getAddrs() {\n  return rpc.getAddrs(rpcAddr);\n}\n\nexport async function setAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.setAddrs(rpcAddr, params);\n}\n\nexport async function addAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.addAddrs(rpcAddr, params);\n}\n\nexport async function removeAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.removeAddrs(rpcAddr, params);\n}\n\nexport async function getLocalIP() {\n  return rpc.getLocalIP(rpcAddr);\n}\n\nexport async function getInfo() {\n  return rpc.getInfo(rpcAddr);\n}\n","export function assignDefined(target, ...sources) {\n  for (let source of sources) {\n    if (source) {\n      for (let key of Object.keys(source)) {\n        if (source[key] !== undefined) {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n  return target;\n}\n","import React from 'react';\nimport QRCode from 'qrcode';\nimport { withTranslation, Trans } from 'react-i18next';\nimport { Button, Container, MenuItem, List, ListItem, ListItemText, Tab, TextField, Tooltip, Select } from '@material-ui/core';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\n\nimport i18n, { resources as languages } from './i18n';\nimport * as rpc from './rpc';\n\nimport './App.css';\n\nclass HoverQRCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qrCode: '',\n    };\n  }\n\n  componentDidMount() {\n    QRCode.toDataURL(this.props.rawData).then(qrCode => {\n      this.setState({ qrCode });\n    }).catch(console.error);\n  }\n\n  render() {\n    return (\n      <Tooltip title={<img src={this.state.qrCode} alt=\"QR Code\" />} >\n        <img src=\"/static/media/qr_code.png\" alt=\"QR Code\" style={{height: '24px', verticalAlign: 'middle'}} />\n      </Tooltip>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '0',\n      adminTokenStr: '',\n      adminTokenQRCode: '',\n      acceptAddrs: '',\n      adminAddrs: '',\n      addr: '',\n      localIP: [],\n      language: '',\n    };\n    for (let i = 0; i < i18n.languages.length; i++) {\n      if (languages[i18n.languages[i]]) {\n        this.state.language = i18n.languages[i];\n        break;\n      }\n    }\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleAcceptAddrsChange = this.handleAcceptAddrsChange.bind(this);\n    this.handleAdminAddrsChange = this.handleAdminAddrsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateAdminToken = this.updateAdminToken.bind(this);\n    this.handleLanguageChange = this.handleLanguageChange.bind(this);\n  }\n\n  handleTabChange(event, value) {\n    this.setState({ activeTab: value });\n    if (value === '4') {\n      this.updateAdvancedInfo();\n    }\n  }\n\n  handleAcceptAddrsChange(event) {\n    this.setState({ acceptAddrs: event.target.value });\n  }\n\n  handleAdminAddrsChange(event) {\n    this.setState({ adminAddrs: event.target.value });\n  }\n\n  handleLanguageChange(event) {\n    this.setState({ language: event.target.value });\n    i18n.changeLanguage(event.target.value);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      let addrs = await rpc.setAddrs(strToAddrs(this.state.acceptAddrs), strToAddrs(this.state.adminAddrs));\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n      alert(this.props.t('save success'));\n    } catch (e) {\n      console.error(e);\n      alert(e);\n    }\n  }\n\n  async updateAdminToken() {\n    try {\n      let adminToken = await rpc.getAdminToken();\n      if (adminToken) {\n        let adminTokenStr = JSON.stringify(adminToken);\n        let adminTokenQRCode = await QRCode.toDataURL(adminTokenStr);\n        this.setState({\n          adminTokenStr,\n          adminTokenQRCode,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  updateAdvancedInfo() {\n    this.updateAdminToken();\n\n    rpc.getAddrs().then((addrs) => {\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n    }).catch((e) => {\n      console.error(e);\n      alert(e);\n    });\n\n    rpc.getInfo().then((info) => {\n      this.setState({\n        addr: info.addr,\n        localIP: info.localIP.ipv4,\n      });\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  componentDidMount() {\n    this.updateAdvancedInfo();\n    setInterval(this.updateAdminToken, 5 * 60 * 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <div className=\"language-switcher\">\n            <Select\n              value={this.state.language}\n              onChange={this.handleLanguageChange}\n            >\n              {\n                Object.keys(languages).map((lang) => {\n                  return (\n                    <MenuItem key={lang} value={lang}>{i18n.getFixedT(lang)('language')}</MenuItem>\n                  )\n                })\n              }\n            </Select>\n          </div>\n          <div className=\"row\">\n            <img src=\"/static/media/nkn_logo.png\" alt=\"NKN logo\" />\n          </div>\n          <TabContext value={this.state.activeTab}>\n            <TabList centered onChange={this.handleTabChange}>\n              <Tab label={this.props.t('mobile tab')} value=\"0\" />\n              <Tab label={this.props.t('desktop tab')} value=\"1\" />\n              <Tab label={this.props.t('data plan tab')} value=\"2\" />\n              <Tab label={this.props.t('need help tab')} value=\"3\" />\n              <Tab label={this.props.t('advanced tab')} value=\"4\" />\n            </TabList>\n            <TabPanel value=\"0\">\n              <div className=\"row\">\n                <img src={this.state.adminTokenQRCode} alt=\"QR Code\" />\n              </div>\n              <List>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"download nMobile pro\"\n                      components={{\n                        nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                        QRCode: <HoverQRCode rawData={this.props.t('nMobileProLink')} />,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('add device from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('connect from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"mobile guide\"\n                      components={{\n                        guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')} />,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n              </List>\n            </TabPanel>\n            <TabPanel value=\"1\">\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add device in mobile first\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add server from desktop\"\n                    components={{\n                      nConnectClientDesktopLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nConnectClientDesktopLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('scan QR code to add server to desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('connect from desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"desktop guide\"\n                    components={{\n                      guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"2\">\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('purchase method')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"purchase from mobile\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"purchase from web\"\n                    components={{\n                      paymentLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('paymentLink', {addr: addrToPubKey(this.state.addr), lng: this.state.language})} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"3\">\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('need help method')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"create forum post\"\n                    components={{\n                      forumLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('forumLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"send email\"\n                    components={{\n                      emailLink: <a href={'mailto:'+this.props.t('emailAddress')} />,\n                      emailAddress: this.props.t('emailAddress'),\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"mobile customer service\"\n                    components={{\n                      nMobileProLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nMobileProLink')} />,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"4\">\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('local IP address')}\n                  value={this.state.localIP.join('\\n')}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('access key')}\n                  value={this.state.adminTokenStr}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('accept addresses')}\n                  value={this.state.acceptAddrs}\n                  onChange={this.handleAcceptAddrsChange}\n                  style={{width: '100%'}}\n                  />\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('admins')}\n                  value={this.state.adminAddrs}\n                  onChange={this.handleAdminAddrsChange}\n                  style={{width: '100%'}}\n                  />\n              </div>\n              <div className=\"advanced-row\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleSubmit}\n                  style={{width: '100%'}}\n                  >\n                  {this.props.t('save')}\n                </Button>\n              </div>\n            </TabPanel>\n          </TabContext>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction addrsToStr(addrs) {\n  if (!addrs) {\n    return '';\n  }\n  return addrs.join('\\n');\n}\n\nfunction strToAddrs(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split('\\n').filter(s => s.length > 0);\n}\n\nfunction addrToPubKey(addr) {\n  let s = addr.split('.');\n  return s[s.length-1];\n}\n\nexport default withTranslation()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './index.css';\nimport './i18n';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}